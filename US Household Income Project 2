SELECT *
FROM US_Project2.us_household_income;

SELECT *
FROM US_Project2.us_household_income_cleaned;

-- Remove Duplicates
DELETE FROM US_Project2.us_household_income
WHERE 
	row_id IN (
	SELECT row_id
FROM (
	SELECT row_id, id,
		ROW_NUMBER() OVER (
			PARTITION BY id
			ORDER BY id) AS row_num
	FROM 
		us_household_income
) duplicates
WHERE 
	row_num > 1
);
-- Fixing some data quality issues by fixing typos and general standardization
UPDATE US_Project2.us_household_income
SET State_Name = 'Georgia'
WHERE State_Name = 'georia';

UPDATE US_Project2.us_household_income
SET County = UPPER(County);

UPDATE US_Project2.us_household_income
SET City = UPPER(City);

UPDATE US_Project2.us_household_income
SET Place = UPPER(Place);

UPDATE US_Project2.us_household_income
SET State_Name = UPPER(State_Name);

UPDATE US_Project2.us_household_income
SET `Type` = 'CDP'
WHERE `Type` = 'CPD';

UPDATE US_Project2.us_household_income
SET `Type` = 'Borough'
WHERE `Type` = 'Boroughs';

DELIMITER $$
DROP PROCEDURE IF EXISTS Copy_and_Clean_Data;
CREATE PROCEDURE Copy_and_Clean_Data()
BEGIN 
-- Creating our table 
	CREATE TABLE IF NOT EXISTS `us_household_income_cleaned` (
	  `row_id` text,
	  `id` text,
	  `State_Code` text,
	  `State_Name` text,
	  `State_ab` text,
	  `County` text,
	  `City` text,
	  `Place` text,
	  `Type` text,
	  `Primary` text,
	  `Zip_Code` text,
	  `Area_Code` text,
	  `ALand` text,
	  `AWater` text,
	  `Lat` text,
	  `Lon` text,
	  `TimeStamp` TIMESTAMP DEFAULT NULL
	 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- Copy data to new table 
	INSERT INTO us_household_income_cleaned
    SELECT *, CURRENT_TIMESTAMP
	FROM US_Project2.us_household_income;
    
-- Data Cleaning Steps 
	DELETE FROM US_Project2.us_household_income_cleaned
	WHERE 
		row_id IN (
		SELECT row_id
	FROM (
		SELECT row_id, id,
			ROW_NUMBER() OVER (
				PARTITION BY id, `TimeStamp`
				ORDER BY id, `TimeStamp`) AS row_num
		FROM 
			us_household_income_cleaned
	) duplicates
	WHERE 
		row_num > 1
	);
-- Fixing some data quality issues by fixing typos and general standardization
	UPDATE US_Project2.us_household_income_cleaned
	SET State_Name = 'Georgia'
	WHERE State_Name = 'georia';

	UPDATE US_Project2.us_household_income_cleaned
	SET County = UPPER(County);

	UPDATE US_Project2.us_household_income_cleaned
	SET City = UPPER(City);

	UPDATE US_Project2.us_household_income_cleaned
	SET Place = UPPER(Place);

	UPDATE US_Project2.us_household_income_cleaned
	SET State_Name = UPPER(State_Name);

	UPDATE US_Project2.us_household_income_cleaned
	SET `Type` = 'CDP'
	WHERE `Type` = 'CPD';

	UPDATE US_Project2.us_household_income_cleaned
	SET `Type` = 'Borough'
	WHERE `Type` = 'Boroughs';


END $$
DELIMITER ;

CALL Copy_and_Clean_Data();

-- Create Event 
DROP EVENT run_data_cleaning;
CREATE EVENT run_data_cleaning 
	ON SCHEDULE EVERY 30 DAY
    DO CALL Copy_and_Clean_Data();
    
-- Debugging/Checking if stored procedure works 
		SELECT row_id
	FROM (
		SELECT row_id, id,
			ROW_NUMBER() OVER (
				PARTITION BY id
				ORDER BY id) AS row_num
		FROM 
			us_household_income_cleaned
	) duplicates
	WHERE 
		row_num > 1;

SELECT COUNT(row_id)
FROM us_household_income_cleaned;

SELECT state_name, COUNT(state_name)
FROM us_household_income_cleaned
GROUP BY state_name;
